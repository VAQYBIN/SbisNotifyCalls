import os
from dotenv import load_dotenv
from typing import List

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()


class Config:
    # Telegram Bot –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    BOT_TOKEN: str = os.getenv('BOT_TOKEN')

    # –ì—Ä—É–ø–ø—ã –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    NOTIFIED_GROUPS: List[str] = os.getenv('NOTIFIED_GROUPS', '').split(',')

    # Email –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    EMAIL_ACC: str = os.getenv('EMAIL_ACC')
    EMAIL_PASS: str = os.getenv('EMAIL_PASS')

    # Yandex IMAP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    IMAP_SERVER: str = 'imap.yandex.ru'
    IMAP_PORT: int = 993

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    @classmethod
    def validate(cls):
        if not cls.BOT_TOKEN:
            raise ValueError("BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        if not cls.EMAIL_ACC:
            raise ValueError("EMAIL_ACC –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        if not cls.EMAIL_PASS:
            raise ValueError("EMAIL_PASS –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        if not cls.NOTIFIED_GROUPS or cls.NOTIFIED_GROUPS == ['']:
            raise ValueError("NOTIFIED_GROUPS –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")

        # –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ —Å–ø–∏—Å–∫–∞ –≥—Ä—É–ø–ø
        cls.NOTIFIED_GROUPS = [group.strip()
                               for group in cls.NOTIFIED_GROUPS if group.strip()]

        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞:")
        print(f"üìß Email: {cls.EMAIL_ACC}")
        print(f"üì± –ì—Ä—É–ø–ø –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {len(cls.NOTIFIED_GROUPS)}")


# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è
Config.validate()
